<?php
/**
 * Plugin Name: Anti Staticsong Enhanced Plus
 * Description: Protege contra URLs maliciosas em arquivos e no banco de dados, com interface administrativa para processamento manual.
 * Version: 1.3
 * Author: Central Midia
 */

class AntiStaticsongEnhancedPlus {
    private $prohibited_urls = [
        'https://api.staticsong.com/store/f.php',
        'https://example.com/malicious.php',
        'https://dangerous.com/script.js',
    ];

    public function __construct() {
        add_action('admin_menu', array($this, 'add_admin_page'));
    }

    public function add_admin_page() {
        add_menu_page(
            'Anti Staticsong Enhanced',
            'Anti Staticsong',
            'manage_options',
            'anti-staticsong-enhanced',
            array($this, 'admin_page_html'),
            'dashicons-shield',
            75
        );
    }

    public function admin_page_html() {
        if ($_POST['process_cleanup']) {
            try {
                $this->process_cleanup();
                echo '<div class="notice notice-success"><p>Limpeza realizada com sucesso.</p></div>';
            } catch (Exception $e) {
                echo '<div class="notice notice-error"><p>Erro ao realizar a limpeza: ' . $e->getMessage() . '</p></div>';
            }
        }

        echo '<div class="wrap">
                <h2>Anti Staticsong Enhanced Plus</h2>
                <form method="post">
                    <input type="hidden" name="process_cleanup" value="1">
                    <input type="submit" value="Processar Limpeza" class="button button-primary">
                </form>
              </div>';
    }

    private function process_cleanup() {
        $this->check_database();
        $this->check_files(WP_PLUGIN_DIR);
        $this->check_files(get_template_directory());
        $this->check_files(get_stylesheet_directory());
    }

    private function check_database() {
        global $wpdb;
        foreach ($this->prohibited_urls as $url) {
            $wpdb->query(
                $wpdb->prepare(
                    "UPDATE {$wpdb->prefix}posts SET post_content = REPLACE(post_content, %s, '') WHERE post_content LIKE %s",
                    $url,
                    '%' . $wpdb->esc_like($url) . '%'
                )
            );
        }
    }

    private function check_files($directory) {
        $files = new RecursiveIteratorIterator(new RecursiveDirectoryIterator($directory));
        foreach ($files as $file) {
            if ($file->isFile() && strpos($file->getFilename(), '.php') !== false) {
                try {
                    $file_contents = file_get_contents($file->getRealPath());
                    foreach ($this->prohibited_urls as $url) {
                        if (strpos($file_contents, $url) !== false) {
                            $file_contents = str_replace($url, '', $file_contents);
                            file_put_contents($file->getRealPath(), $file_contents);
                        }
                    }
                } catch (Exception $e) {
                    // Log exception or handle error appropriately
                    error_log('Anti Staticsong Error: ' . $e->getMessage());
                }
            }
        }
    }
}

new AntiStaticsongEnhancedPlus();
